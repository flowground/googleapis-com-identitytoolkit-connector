{
    "type": "object",
    "properties": {
        "alt": {
            "type": "string",
            "enum": [
                "json"
            ],
            "default": "json"
        },
        "fields": {
            "type": "string"
        },
        "key": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "userIp": {
            "type": "string"
        },
        "requestBody": {
            "description": "Request to get the IDP authentication URL.",
            "properties": {
                "appId": {
                    "description": "The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.",
                    "type": "string"
                },
                "authFlowType": {
                    "description": "Explicitly specify the auth flow type. Currently only support \"CODE_FLOW\" type. The field is only used for Google provider.",
                    "type": "string"
                },
                "clientId": {
                    "description": "The relying party OAuth client ID.",
                    "type": "string"
                },
                "context": {
                    "description": "The opaque value used by the client to maintain context info between the authentication request and the IDP callback.",
                    "type": "string"
                },
                "continueUri": {
                    "description": "The URI to which the IDP redirects the user after the federated login flow.",
                    "type": "string"
                },
                "customParameter": {
                    "additionalProperties": {
                        "description": "The customized query parameter.",
                        "type": "string"
                    },
                    "description": "The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.",
                    "type": "object"
                },
                "hostedDomain": {
                    "description": "The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.",
                    "type": "string"
                },
                "identifier": {
                    "description": "The email or federated ID of the user.",
                    "type": "string"
                },
                "oauthConsumerKey": {
                    "description": "The developer's consumer key for OpenId OAuth Extension",
                    "type": "string"
                },
                "oauthScope": {
                    "description": "Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant",
                    "type": "string"
                },
                "openidRealm": {
                    "description": "Optional realm for OpenID protocol. The sub string \"scheme://domain:port\" of the param \"continueUri\" is used if this is not set.",
                    "type": "string"
                },
                "otaApp": {
                    "description": "The native app package for OTA installation.",
                    "type": "string"
                },
                "providerId": {
                    "description": "The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.",
                    "type": "string"
                },
                "sessionId": {
                    "description": "The session_id passed by client.",
                    "type": "string"
                },
                "tenantId": {
                    "description": "For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.",
                    "type": "string"
                },
                "tenantProjectNumber": {
                    "description": "Tenant project number to be used for idp discovery.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        }
    }
}